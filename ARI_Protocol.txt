Приложение построено на принципах REST архитектуры, в качестве методов удаленного
вызова CRUD процедур использованы, соответственно, HTTP методы:

- POST;

- GET;

- PUT;

- DELETE.

В решении предусмотрено 3 эндпойнта: 

http://{host:port}/authorize

http://{host:port}/divisions

http://{host:port}/rieltors

Сценарии использования: 

1. /authorize

Поддерживает: POST

Данный эндпойнт является провайдером авторизации. При передаче JSON объекта в контейнере
POST запроса на эндпойнт, сервер проверяет указанные в нем свойства Login и Password и,
в случае, если пользователь с такими параметрами найден, возвращает JSON объект со 
свойствами Token и UserName. 

Пример запроса:

{ "Login": "MyUser", "Password": "MyPassword"}

Пример ответа:

{ "Token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJUZXN0IiwiaWF0IjoxNT
QyNzk3NjM2LCJleHAiOjE1NzQzMzM2MzYsImF1ZCI6IlRlc3QiLCJzdWIiOiJ0ZXN0QGV4YW1wbGUuY
29tIiwiVXNlck5hbWUiOiJNeUxvZ2luIiwiUm9sZSI6IlVzZXIifQ.KCepeq6nDFTuFEvsv2NhNyBDI
fnt8RjKa-dZpIaoysc", "UserName": "MyUser"}

Полученный токен используется для доступа к остальным эндпойнтам. Для этого в HTTP
заголовке Authorization  передается знаечение "Bearer {Token}". Значение {Token} 
подставляется из одноименного свойства полученного объекта. 

Время жизни токена 10 минут, после его истечения, требуется получение нового токена. 

2. /divisions

Поддерживает: POST, PUT, GET, DELETE
Методы POST, PUT, DELETE требуют прав роли "Admin"

***GET***

Возвращает массив подразделений в JSON нотации. 

Свойства объекта: 

-Name (String);
-Id	(Long) (назначает сервер);
-CreatedDateTime (DateTime) (назначает сервер);
-EditedDateTime (DateTime) (назначает сервер).

Поддерживает 2 параметра для пагинации (если не указаны оба, пагинация не осуществляется):

pageIndex - индекс страницы с нуля;
pageSize - количество объектов на странице.

и 1 параметр для фильтрации (фильтрация осуществляется обособленно для каждого параметра,
при фильтрации используется нечеткое соответствие LIKE):

name.

!!!Регистр ключей учитывается, значений - нет.

Параметры передаются в URL кодировке после символа "?" в виде "ключ=значение", разделяются 
символом амперсанда "&", например:

>> /divisions?pageIndex=2&pageSize=12&name=test

Пример ответа: 

[{ 
	"Name": "Test1", 
	"Id": "1", 
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
  },
 {
 	"Name": "Test2", 
	"Id": "2", 
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
 }
]

Существует дополнительный роут /divisions/{id}, где {id} - это известный идентификатор
подразделения. Ответом будет возвращен найденный JSON объект подразделения или пустой
контейнер.

Пример запроса:

>> /divisions/2

Пример ответа:

 {
 	"Name": "Test2", 
	"Id": "2", 
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
 }

 ***PUT*** и ***POST***

 Методы подразумевают передачу JSON объекта на эндпойнт в контейнере сообщения. 
 В первом случае объект сохраняется в БД, во втором - обновляется. Соответственно,
 в первом случае свойство Id не заполняется, а во втором оно обязательно. 

 Пример запроса POST:
 {
 	"Name": "Test3"
 }

  Пример запроса PUT:
 {
 	"Name": "Test4",
	"Id" : "3"
 }

 При успешном сохранении сервер пришлет результат OK. 

 ***DELETE***

 При использовании метода DELETE сущность удаляется. Удаление происходит по Id, при этом
 роутинг аналогичен расширенному методу GET: запрос отсылаестя на эндпойнт /divisions/

 Пример запроса:

 >> /divisions/2

 При успешном удалении сервер пришлет результат OK. 


3. /rieltors

Поддерживает: POST, PUT, GET, DELETE
Методы POST, PUT, DELETE требуют прав роли "Admin"

***GET***

Возвращает массив подразделений в JSON нотации. 

Свойства объекта: 

-Firstname (String);
-Lastname (String);
-Id	(Long) (назначает сервер);
-DivisionId	(Long);
-CreatedDateTime (DateTime) (назначает сервер);
-EditedDateTime (DateTime) (назначает сервер).

Поддерживает 2 параметра для пагинации (если не указаны оба, пагинация не осуществляется):

pageIndex - индекс страницы с нуля;
pageSize - количество объектов на странице;

и 2 параметра для фильтрации (фильтрация осуществляется обособленно для каждого параметра,
при фильтрации используется нечеткое соответствие LIKE)

lastname - фамилия риелтора;
firstname - имя риелтора.

!!!Регистр ключей учитывается, значений - нет.

параметры на эндпойнт передаются в URL кодировке после символа "?" в виде "ключ=значение", разделяются 
символом амперсанда "&", например:

>> /rieltors?pageIndex=2&pageSize=12&firstname=ван

Пример ответа: 

[{ 
 	"Firstname": "Иван", 
	"Lastname" : "Петров",
	"Id": "1", 
	"DivisionId" : "null"
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
  },
 {
 	"Firstname": "Ванесса", 
	"Lastname" : "Сидорова",
	"Id": "2", 
	"DivisionId" : "1"
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
 }
]

Существует дополнительный роут /rieltors/{id}, где {id} - это известный идентификатор
риелтора. Ответом будет возвращен найденный JSON объект риелтора или пустой
контейнер.

Пример запроса:

>> /rieltors/2

Пример ответа:

 {
 	"Firstname": "Ванесса", 
	"Lastname" : "Сидорова",
	"Id": "2", 
	"DivisionId" : "1"
	"CreatedDateTime":"2018-11-20 22:57:08.0600000", 
	"EditedDateTime":"2018-11-20 22:57:08.0600000"
 }

 ***PUT*** и ***POST***

 Методы подразумевают передачу JSON объекта на эндпойнт в контейнере сообщения. 
 В первом случае объект сохраняется в БД, во втором - обновляется. Соответственно,
 в первом случае свойство Id не заполняется, а во втором оно обязательно. 

 Пример запроса POST:
 {
 	"Firstname": "Михаил", 
	"Lastname" : "Дробышевский",
 }

  Пример запроса PUT:
 {
	"Id": "3", 
	"DivisionId" : "2"
 
 }

 При успешном сохранении сервер пришлет результат OK. 

 ***DELETE***

 При использовании метода DELETE сущность удаляется. Удаление происходит по Id, при этом
 роутинг аналогичен расширенному методу GET: запрос отсылаестя на эндпойнт /rieltors/

 Пример запроса:

 >> /rieltors/2

 При успешном удалении сервер пришлет результат OK. 

